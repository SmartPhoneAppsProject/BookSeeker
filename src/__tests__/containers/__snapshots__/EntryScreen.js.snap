// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<EntryScreenContainer /> 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EntryScreen
    changePublished={[Function]}
    changeTitle={[Function]}
    chooseDate={[Function]}
    chosenDate=""
    date={2018-08-04T09:14:21.527Z}
    errorMessage=""
    isDateTimePickerVisible={false}
    maximumDate={2018-08-04T09:14:21.527Z}
    photo=""
    pickPhoto={[Function]}
    published=""
    title=""
    toggleDatetimePicker={[Function]}
    validateTitle={[Function]}
    validation={false}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "behavior": "padding",
      "children": Array [
        <View
          style={
            Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "flexGrow": 1,
              "justifyContent": "center",
            }
          }
        >
          <View />
          <TouchableHighlight
            activeOpacity={0.85}
            delayPressOut={100}
            onPress={[Function]}
            style={
              Object {
                "margin": 5,
                "padding": 5,
              }
            }
            underlayColor="#dcdcdc"
          >
            <Icon
              allowFontScaling={false}
              color="#a9a9a9"
              name="photo-camera"
              size={40}
            />
          </TouchableHighlight>
          <TouchableHighlight
            activeOpacity={0.85}
            delayPressOut={100}
            onPress={[Function]}
            style={
              Object {
                "margin": 5,
                "padding": 5,
              }
            }
            underlayColor="#dcdcdc"
          >
            <Icon
              allowFontScaling={false}
              color="#a9a9a9"
              name="photo"
              size={40}
            />
          </TouchableHighlight>
        </View>,
        <View
          style={
            Object {
              "flex": 1,
              "padding": 15,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "paddingTop": 20,
              }
            }
          >
            <Input
              containerStyle={
                Object {
                  "backgroundColor": "rgba(255,255,255,0.2)",
                  "borderBottomWidth": 2,
                  "borderColor": "#A4A4A4",
                  "marginBottom": 10,
                }
              }
              displayError={true}
              errorMessage=" "
              errorStyle={
                Object {
                  "color": "#cd5c5c",
                }
              }
              maxLength={100}
              onChangeText={[Function]}
              placeholder="タイトル"
              returnKeyType="done"
              shake={false}
              value=""
            />
          </View>
        </View>,
        <View
          style={
            Object {
              "flex": 1,
              "padding": 15,
            }
          }
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "alignSelf": "stretch",
                "paddingLeft": 20,
              }
            }
          >
            発行日を選択
          </Text>
          <Button
            TouchableComponent={[Function]}
            buttonStyle={
              Object {
                "backgroundColor": "rgba(255,255,255,0.2)",
                "borderColor": "#A4A4A4",
                "borderRadius": 7,
                "borderWidth": 2,
                "margin": 10,
                "paddingBottom": 8,
                "paddingLeft": 18,
                "paddingRight": 18,
                "paddingTop": 8,
                "width": 690,
              }
            }
            clear={false}
            disabled={false}
            icon={
              <Icon
                allowFontScaling={false}
                color="#A4A4A4"
                name="triangle-down"
                size={20}
              />
            }
            iconContainerStyle={
              Object {
                "marginLeft": 110,
                "marginRight": 10,
              }
            }
            iconRight={true}
            loadingProps={
              Object {
                "color": "white",
                "size": "small",
              }
            }
            onPress={[Function]}
            raised={false}
            title="2018-7-4"
            titleStyle={
              Object {
                "color": "#A4A4A4",
                "fontWeight": "700",
              }
            }
          />
          <View
            style={undefined}
          >
            <CustomDatePickerIOS
              cancelTextIOS="キャンセル"
              confirmTextIOS="決定"
              date={2018-08-04T09:14:21.527Z}
              isVisible={false}
              locale="ja"
              maximumDate={2018-08-04T09:14:21.527Z}
              mode="date"
              neverDisableConfirmIOS={false}
              onCancel={[Function]}
              onConfirm={[Function]}
              onHideAfterConfirm={[Function]}
              reactNativeModalPropsIOS={Object {}}
              titleIOS="発行日を選択する"
            />
          </View>
        </View>,
        <View
          style={
            Object {
              "flex": 1,
              "padding": 15,
            }
          }
        >
          <Button
            TouchableComponent={[Function]}
            buttonStyle={
              Object {
                "backgroundColor": "#2980b6",
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingVertical": 20,
              }
            }
            clear={false}
            disabled={false}
            icon={
              <Icon
                allowFontScaling={false}
                color="white"
                name="barcode"
                size={22}
              />
            }
            iconContainerStyle={
              Object {
                "marginRight": 10,
              }
            }
            iconRight={false}
            loadingProps={
              Object {
                "color": "white",
                "size": "small",
              }
            }
            onPress={[Function]}
            raised={false}
            title="バーコード読み取り"
            titleStyle={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          />
        </View>,
      ],
      "keyboardVerticalOffset": 0,
      "style": Object {
        "backgroundColor": "#fff",
        "flex": 1,
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <View />,
            <TouchableHighlight
              activeOpacity={0.85}
              delayPressOut={100}
              onPress={[Function]}
              style={
                Object {
                  "margin": 5,
                  "padding": 5,
                }
              }
              underlayColor="#dcdcdc"
            >
              <Icon
                allowFontScaling={false}
                color="#a9a9a9"
                name="photo-camera"
                size={40}
              />
            </TouchableHighlight>,
            <TouchableHighlight
              activeOpacity={0.85}
              delayPressOut={100}
              onPress={[Function]}
              style={
                Object {
                  "margin": 5,
                  "padding": 5,
                }
              }
              underlayColor="#dcdcdc"
            >
              <Icon
                allowFontScaling={false}
                color="#a9a9a9"
                name="photo"
                size={40}
              />
            </TouchableHighlight>,
          ],
          "style": Object {
            "alignItems": "center",
            "flex": 1,
            "flexDirection": "row",
            "flexGrow": 1,
            "justifyContent": "center",
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.85,
              "children": <Icon
                allowFontScaling={false}
                color="#a9a9a9"
                name="photo-camera"
                size={40}
              />,
              "delayPressOut": 100,
              "onPress": [Function],
              "style": Object {
                "margin": 5,
                "padding": 5,
              },
              "underlayColor": "#dcdcdc",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": false,
                "color": "#a9a9a9",
                "name": "photo-camera",
                "size": 40,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "activeOpacity": 0.85,
              "children": <Icon
                allowFontScaling={false}
                color="#a9a9a9"
                name="photo"
                size={40}
              />,
              "delayPressOut": 100,
              "onPress": [Function],
              "style": Object {
                "margin": 5,
                "padding": 5,
              },
              "underlayColor": "#dcdcdc",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "allowFontScaling": false,
                "color": "#a9a9a9",
                "name": "photo",
                "size": 40,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <View
            style={
              Object {
                "alignItems": "center",
                "justifyContent": "center",
                "paddingTop": 20,
              }
            }
          >
            <Input
              containerStyle={
                Object {
                  "backgroundColor": "rgba(255,255,255,0.2)",
                  "borderBottomWidth": 2,
                  "borderColor": "#A4A4A4",
                  "marginBottom": 10,
                }
              }
              displayError={true}
              errorMessage=" "
              errorStyle={
                Object {
                  "color": "#cd5c5c",
                }
              }
              maxLength={100}
              onChangeText={[Function]}
              placeholder="タイトル"
              returnKeyType="done"
              shake={false}
              value=""
            />
          </View>,
          "style": Object {
            "flex": 1,
            "padding": 15,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Input
              containerStyle={
                Object {
                  "backgroundColor": "rgba(255,255,255,0.2)",
                  "borderBottomWidth": 2,
                  "borderColor": "#A4A4A4",
                  "marginBottom": 10,
                }
              }
              displayError={true}
              errorMessage=" "
              errorStyle={
                Object {
                  "color": "#cd5c5c",
                }
              }
              maxLength={100}
              onChangeText={[Function]}
              placeholder="タイトル"
              returnKeyType="done"
              shake={false}
              value=""
            />,
            "style": Object {
              "alignItems": "center",
              "justifyContent": "center",
              "paddingTop": 20,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "containerStyle": Object {
                "backgroundColor": "rgba(255,255,255,0.2)",
                "borderBottomWidth": 2,
                "borderColor": "#A4A4A4",
                "marginBottom": 10,
              },
              "displayError": true,
              "errorMessage": " ",
              "errorStyle": Object {
                "color": "#cd5c5c",
              },
              "maxLength": 100,
              "onChangeText": [Function],
              "placeholder": "タイトル",
              "returnKeyType": "done",
              "shake": false,
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "alignSelf": "stretch",
                  "paddingLeft": 20,
                }
              }
            >
              発行日を選択
            </Text>,
            <Button
              TouchableComponent={[Function]}
              buttonStyle={
                Object {
                  "backgroundColor": "rgba(255,255,255,0.2)",
                  "borderColor": "#A4A4A4",
                  "borderRadius": 7,
                  "borderWidth": 2,
                  "margin": 10,
                  "paddingBottom": 8,
                  "paddingLeft": 18,
                  "paddingRight": 18,
                  "paddingTop": 8,
                  "width": 690,
                }
              }
              clear={false}
              disabled={false}
              icon={
                <Icon
                  allowFontScaling={false}
                  color="#A4A4A4"
                  name="triangle-down"
                  size={20}
                />
              }
              iconContainerStyle={
                Object {
                  "marginLeft": 110,
                  "marginRight": 10,
                }
              }
              iconRight={true}
              loadingProps={
                Object {
                  "color": "white",
                  "size": "small",
                }
              }
              onPress={[Function]}
              raised={false}
              title="2018-7-4"
              titleStyle={
                Object {
                  "color": "#A4A4A4",
                  "fontWeight": "700",
                }
              }
            />,
            <View
              style={undefined}
            >
              <CustomDatePickerIOS
                cancelTextIOS="キャンセル"
                confirmTextIOS="決定"
                date={2018-08-04T09:14:21.527Z}
                isVisible={false}
                locale="ja"
                maximumDate={2018-08-04T09:14:21.527Z}
                mode="date"
                neverDisableConfirmIOS={false}
                onCancel={[Function]}
                onConfirm={[Function]}
                onHideAfterConfirm={[Function]}
                reactNativeModalPropsIOS={Object {}}
                titleIOS="発行日を選択する"
              />
            </View>,
          ],
          "style": Object {
            "flex": 1,
            "padding": 15,
          },
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "accessible": true,
              "allowFontScaling": true,
              "children": "発行日を選択",
              "ellipsizeMode": "tail",
              "style": Object {
                "alignSelf": "stretch",
                "paddingLeft": 20,
              },
            },
            "ref": null,
            "rendered": "発行日を選択",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "TouchableComponent": [Function],
              "buttonStyle": Object {
                "backgroundColor": "rgba(255,255,255,0.2)",
                "borderColor": "#A4A4A4",
                "borderRadius": 7,
                "borderWidth": 2,
                "margin": 10,
                "paddingBottom": 8,
                "paddingLeft": 18,
                "paddingRight": 18,
                "paddingTop": 8,
                "width": 690,
              },
              "clear": false,
              "disabled": false,
              "icon": <Icon
                allowFontScaling={false}
                color="#A4A4A4"
                name="triangle-down"
                size={20}
              />,
              "iconContainerStyle": Object {
                "marginLeft": 110,
                "marginRight": 10,
              },
              "iconRight": true,
              "loadingProps": Object {
                "color": "white",
                "size": "small",
              },
              "onPress": [Function],
              "raised": false,
              "title": "2018-7-4",
              "titleStyle": Object {
                "color": "#A4A4A4",
                "fontWeight": "700",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <CustomDatePickerIOS
                cancelTextIOS="キャンセル"
                confirmTextIOS="決定"
                date={2018-08-04T09:14:21.527Z}
                isVisible={false}
                locale="ja"
                maximumDate={2018-08-04T09:14:21.527Z}
                mode="date"
                neverDisableConfirmIOS={false}
                onCancel={[Function]}
                onConfirm={[Function]}
                onHideAfterConfirm={[Function]}
                reactNativeModalPropsIOS={Object {}}
                titleIOS="発行日を選択する"
              />,
              "style": undefined,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "cancelTextIOS": "キャンセル",
                "confirmTextIOS": "決定",
                "date": 2018-08-04T09:14:21.527Z,
                "isVisible": false,
                "locale": "ja",
                "maximumDate": 2018-08-04T09:14:21.527Z,
                "mode": "date",
                "neverDisableConfirmIOS": false,
                "onCancel": [Function],
                "onConfirm": [Function],
                "onHideAfterConfirm": [Function],
                "reactNativeModalPropsIOS": Object {},
                "titleIOS": "発行日を選択する",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <Button
            TouchableComponent={[Function]}
            buttonStyle={
              Object {
                "backgroundColor": "#2980b6",
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingVertical": 20,
              }
            }
            clear={false}
            disabled={false}
            icon={
              <Icon
                allowFontScaling={false}
                color="white"
                name="barcode"
                size={22}
              />
            }
            iconContainerStyle={
              Object {
                "marginRight": 10,
              }
            }
            iconRight={false}
            loadingProps={
              Object {
                "color": "white",
                "size": "small",
              }
            }
            onPress={[Function]}
            raised={false}
            title="バーコード読み取り"
            titleStyle={
              Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              }
            }
          />,
          "style": Object {
            "flex": 1,
            "padding": 15,
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "TouchableComponent": [Function],
            "buttonStyle": Object {
              "backgroundColor": "#2980b6",
              "paddingLeft": 10,
              "paddingRight": 10,
              "paddingVertical": 20,
            },
            "clear": false,
            "disabled": false,
            "icon": <Icon
              allowFontScaling={false}
              color="white"
              name="barcode"
              size={22}
            />,
            "iconContainerStyle": Object {
              "marginRight": 10,
            },
            "iconRight": false,
            "loadingProps": Object {
              "color": "white",
              "size": "small",
            },
            "onPress": [Function],
            "raised": false,
            "title": "バーコード読み取り",
            "titleStyle": Object {
              "color": "#fff",
              "fontWeight": "700",
              "textAlign": "center",
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "behavior": "padding",
        "children": Array [
          <View
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "flexDirection": "row",
                "flexGrow": 1,
                "justifyContent": "center",
              }
            }
          >
            <View />
            <TouchableHighlight
              activeOpacity={0.85}
              delayPressOut={100}
              onPress={[Function]}
              style={
                Object {
                  "margin": 5,
                  "padding": 5,
                }
              }
              underlayColor="#dcdcdc"
            >
              <Icon
                allowFontScaling={false}
                color="#a9a9a9"
                name="photo-camera"
                size={40}
              />
            </TouchableHighlight>
            <TouchableHighlight
              activeOpacity={0.85}
              delayPressOut={100}
              onPress={[Function]}
              style={
                Object {
                  "margin": 5,
                  "padding": 5,
                }
              }
              underlayColor="#dcdcdc"
            >
              <Icon
                allowFontScaling={false}
                color="#a9a9a9"
                name="photo"
                size={40}
              />
            </TouchableHighlight>
          </View>,
          <View
            style={
              Object {
                "flex": 1,
                "padding": 15,
              }
            }
          >
            <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "paddingTop": 20,
                }
              }
            >
              <Input
                containerStyle={
                  Object {
                    "backgroundColor": "rgba(255,255,255,0.2)",
                    "borderBottomWidth": 2,
                    "borderColor": "#A4A4A4",
                    "marginBottom": 10,
                  }
                }
                displayError={true}
                errorMessage=" "
                errorStyle={
                  Object {
                    "color": "#cd5c5c",
                  }
                }
                maxLength={100}
                onChangeText={[Function]}
                placeholder="タイトル"
                returnKeyType="done"
                shake={false}
                value=""
              />
            </View>
          </View>,
          <View
            style={
              Object {
                "flex": 1,
                "padding": 15,
              }
            }
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
              style={
                Object {
                  "alignSelf": "stretch",
                  "paddingLeft": 20,
                }
              }
            >
              発行日を選択
            </Text>
            <Button
              TouchableComponent={[Function]}
              buttonStyle={
                Object {
                  "backgroundColor": "rgba(255,255,255,0.2)",
                  "borderColor": "#A4A4A4",
                  "borderRadius": 7,
                  "borderWidth": 2,
                  "margin": 10,
                  "paddingBottom": 8,
                  "paddingLeft": 18,
                  "paddingRight": 18,
                  "paddingTop": 8,
                  "width": 690,
                }
              }
              clear={false}
              disabled={false}
              icon={
                <Icon
                  allowFontScaling={false}
                  color="#A4A4A4"
                  name="triangle-down"
                  size={20}
                />
              }
              iconContainerStyle={
                Object {
                  "marginLeft": 110,
                  "marginRight": 10,
                }
              }
              iconRight={true}
              loadingProps={
                Object {
                  "color": "white",
                  "size": "small",
                }
              }
              onPress={[Function]}
              raised={false}
              title="2018-7-4"
              titleStyle={
                Object {
                  "color": "#A4A4A4",
                  "fontWeight": "700",
                }
              }
            />
            <View
              style={undefined}
            >
              <CustomDatePickerIOS
                cancelTextIOS="キャンセル"
                confirmTextIOS="決定"
                date={2018-08-04T09:14:21.527Z}
                isVisible={false}
                locale="ja"
                maximumDate={2018-08-04T09:14:21.527Z}
                mode="date"
                neverDisableConfirmIOS={false}
                onCancel={[Function]}
                onConfirm={[Function]}
                onHideAfterConfirm={[Function]}
                reactNativeModalPropsIOS={Object {}}
                titleIOS="発行日を選択する"
              />
            </View>
          </View>,
          <View
            style={
              Object {
                "flex": 1,
                "padding": 15,
              }
            }
          >
            <Button
              TouchableComponent={[Function]}
              buttonStyle={
                Object {
                  "backgroundColor": "#2980b6",
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingVertical": 20,
                }
              }
              clear={false}
              disabled={false}
              icon={
                <Icon
                  allowFontScaling={false}
                  color="white"
                  name="barcode"
                  size={22}
                />
              }
              iconContainerStyle={
                Object {
                  "marginRight": 10,
                }
              }
              iconRight={false}
              loadingProps={
                Object {
                  "color": "white",
                  "size": "small",
                }
              }
              onPress={[Function]}
              raised={false}
              title="バーコード読み取り"
              titleStyle={
                Object {
                  "color": "#fff",
                  "fontWeight": "700",
                  "textAlign": "center",
                }
              }
            />
          </View>,
        ],
        "keyboardVerticalOffset": 0,
        "style": Object {
          "backgroundColor": "#fff",
          "flex": 1,
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <View />,
              <TouchableHighlight
                activeOpacity={0.85}
                delayPressOut={100}
                onPress={[Function]}
                style={
                  Object {
                    "margin": 5,
                    "padding": 5,
                  }
                }
                underlayColor="#dcdcdc"
              >
                <Icon
                  allowFontScaling={false}
                  color="#a9a9a9"
                  name="photo-camera"
                  size={40}
                />
              </TouchableHighlight>,
              <TouchableHighlight
                activeOpacity={0.85}
                delayPressOut={100}
                onPress={[Function]}
                style={
                  Object {
                    "margin": 5,
                    "padding": 5,
                  }
                }
                underlayColor="#dcdcdc"
              >
                <Icon
                  allowFontScaling={false}
                  color="#a9a9a9"
                  name="photo"
                  size={40}
                />
              </TouchableHighlight>,
            ],
            "style": Object {
              "alignItems": "center",
              "flex": 1,
              "flexDirection": "row",
              "flexGrow": 1,
              "justifyContent": "center",
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.85,
                "children": <Icon
                  allowFontScaling={false}
                  color="#a9a9a9"
                  name="photo-camera"
                  size={40}
                />,
                "delayPressOut": 100,
                "onPress": [Function],
                "style": Object {
                  "margin": 5,
                  "padding": 5,
                },
                "underlayColor": "#dcdcdc",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowFontScaling": false,
                  "color": "#a9a9a9",
                  "name": "photo-camera",
                  "size": 40,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "activeOpacity": 0.85,
                "children": <Icon
                  allowFontScaling={false}
                  color="#a9a9a9"
                  name="photo"
                  size={40}
                />,
                "delayPressOut": 100,
                "onPress": [Function],
                "style": Object {
                  "margin": 5,
                  "padding": 5,
                },
                "underlayColor": "#dcdcdc",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "allowFontScaling": false,
                  "color": "#a9a9a9",
                  "name": "photo",
                  "size": 40,
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <View
              style={
                Object {
                  "alignItems": "center",
                  "justifyContent": "center",
                  "paddingTop": 20,
                }
              }
            >
              <Input
                containerStyle={
                  Object {
                    "backgroundColor": "rgba(255,255,255,0.2)",
                    "borderBottomWidth": 2,
                    "borderColor": "#A4A4A4",
                    "marginBottom": 10,
                  }
                }
                displayError={true}
                errorMessage=" "
                errorStyle={
                  Object {
                    "color": "#cd5c5c",
                  }
                }
                maxLength={100}
                onChangeText={[Function]}
                placeholder="タイトル"
                returnKeyType="done"
                shake={false}
                value=""
              />
            </View>,
            "style": Object {
              "flex": 1,
              "padding": 15,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Input
                containerStyle={
                  Object {
                    "backgroundColor": "rgba(255,255,255,0.2)",
                    "borderBottomWidth": 2,
                    "borderColor": "#A4A4A4",
                    "marginBottom": 10,
                  }
                }
                displayError={true}
                errorMessage=" "
                errorStyle={
                  Object {
                    "color": "#cd5c5c",
                  }
                }
                maxLength={100}
                onChangeText={[Function]}
                placeholder="タイトル"
                returnKeyType="done"
                shake={false}
                value=""
              />,
              "style": Object {
                "alignItems": "center",
                "justifyContent": "center",
                "paddingTop": 20,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "containerStyle": Object {
                  "backgroundColor": "rgba(255,255,255,0.2)",
                  "borderBottomWidth": 2,
                  "borderColor": "#A4A4A4",
                  "marginBottom": 10,
                },
                "displayError": true,
                "errorMessage": " ",
                "errorStyle": Object {
                  "color": "#cd5c5c",
                },
                "maxLength": 100,
                "onChangeText": [Function],
                "placeholder": "タイトル",
                "returnKeyType": "done",
                "shake": false,
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Text
                accessible={true}
                allowFontScaling={true}
                ellipsizeMode="tail"
                style={
                  Object {
                    "alignSelf": "stretch",
                    "paddingLeft": 20,
                  }
                }
              >
                発行日を選択
              </Text>,
              <Button
                TouchableComponent={[Function]}
                buttonStyle={
                  Object {
                    "backgroundColor": "rgba(255,255,255,0.2)",
                    "borderColor": "#A4A4A4",
                    "borderRadius": 7,
                    "borderWidth": 2,
                    "margin": 10,
                    "paddingBottom": 8,
                    "paddingLeft": 18,
                    "paddingRight": 18,
                    "paddingTop": 8,
                    "width": 690,
                  }
                }
                clear={false}
                disabled={false}
                icon={
                  <Icon
                    allowFontScaling={false}
                    color="#A4A4A4"
                    name="triangle-down"
                    size={20}
                  />
                }
                iconContainerStyle={
                  Object {
                    "marginLeft": 110,
                    "marginRight": 10,
                  }
                }
                iconRight={true}
                loadingProps={
                  Object {
                    "color": "white",
                    "size": "small",
                  }
                }
                onPress={[Function]}
                raised={false}
                title="2018-7-4"
                titleStyle={
                  Object {
                    "color": "#A4A4A4",
                    "fontWeight": "700",
                  }
                }
              />,
              <View
                style={undefined}
              >
                <CustomDatePickerIOS
                  cancelTextIOS="キャンセル"
                  confirmTextIOS="決定"
                  date={2018-08-04T09:14:21.527Z}
                  isVisible={false}
                  locale="ja"
                  maximumDate={2018-08-04T09:14:21.527Z}
                  mode="date"
                  neverDisableConfirmIOS={false}
                  onCancel={[Function]}
                  onConfirm={[Function]}
                  onHideAfterConfirm={[Function]}
                  reactNativeModalPropsIOS={Object {}}
                  titleIOS="発行日を選択する"
                />
              </View>,
            ],
            "style": Object {
              "flex": 1,
              "padding": 15,
            },
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "accessible": true,
                "allowFontScaling": true,
                "children": "発行日を選択",
                "ellipsizeMode": "tail",
                "style": Object {
                  "alignSelf": "stretch",
                  "paddingLeft": 20,
                },
              },
              "ref": null,
              "rendered": "発行日を選択",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "TouchableComponent": [Function],
                "buttonStyle": Object {
                  "backgroundColor": "rgba(255,255,255,0.2)",
                  "borderColor": "#A4A4A4",
                  "borderRadius": 7,
                  "borderWidth": 2,
                  "margin": 10,
                  "paddingBottom": 8,
                  "paddingLeft": 18,
                  "paddingRight": 18,
                  "paddingTop": 8,
                  "width": 690,
                },
                "clear": false,
                "disabled": false,
                "icon": <Icon
                  allowFontScaling={false}
                  color="#A4A4A4"
                  name="triangle-down"
                  size={20}
                />,
                "iconContainerStyle": Object {
                  "marginLeft": 110,
                  "marginRight": 10,
                },
                "iconRight": true,
                "loadingProps": Object {
                  "color": "white",
                  "size": "small",
                },
                "onPress": [Function],
                "raised": false,
                "title": "2018-7-4",
                "titleStyle": Object {
                  "color": "#A4A4A4",
                  "fontWeight": "700",
                },
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <CustomDatePickerIOS
                  cancelTextIOS="キャンセル"
                  confirmTextIOS="決定"
                  date={2018-08-04T09:14:21.527Z}
                  isVisible={false}
                  locale="ja"
                  maximumDate={2018-08-04T09:14:21.527Z}
                  mode="date"
                  neverDisableConfirmIOS={false}
                  onCancel={[Function]}
                  onConfirm={[Function]}
                  onHideAfterConfirm={[Function]}
                  reactNativeModalPropsIOS={Object {}}
                  titleIOS="発行日を選択する"
                />,
                "style": undefined,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "cancelTextIOS": "キャンセル",
                  "confirmTextIOS": "決定",
                  "date": 2018-08-04T09:14:21.527Z,
                  "isVisible": false,
                  "locale": "ja",
                  "maximumDate": 2018-08-04T09:14:21.527Z,
                  "mode": "date",
                  "neverDisableConfirmIOS": false,
                  "onCancel": [Function],
                  "onConfirm": [Function],
                  "onHideAfterConfirm": [Function],
                  "reactNativeModalPropsIOS": Object {},
                  "titleIOS": "発行日を選択する",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Button
              TouchableComponent={[Function]}
              buttonStyle={
                Object {
                  "backgroundColor": "#2980b6",
                  "paddingLeft": 10,
                  "paddingRight": 10,
                  "paddingVertical": 20,
                }
              }
              clear={false}
              disabled={false}
              icon={
                <Icon
                  allowFontScaling={false}
                  color="white"
                  name="barcode"
                  size={22}
                />
              }
              iconContainerStyle={
                Object {
                  "marginRight": 10,
                }
              }
              iconRight={false}
              loadingProps={
                Object {
                  "color": "white",
                  "size": "small",
                }
              }
              onPress={[Function]}
              raised={false}
              title="バーコード読み取り"
              titleStyle={
                Object {
                  "color": "#fff",
                  "fontWeight": "700",
                  "textAlign": "center",
                }
              }
            />,
            "style": Object {
              "flex": 1,
              "padding": 15,
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "TouchableComponent": [Function],
              "buttonStyle": Object {
                "backgroundColor": "#2980b6",
                "paddingLeft": 10,
                "paddingRight": 10,
                "paddingVertical": 20,
              },
              "clear": false,
              "disabled": false,
              "icon": <Icon
                allowFontScaling={false}
                color="white"
                name="barcode"
                size={22}
              />,
              "iconContainerStyle": Object {
                "marginRight": 10,
              },
              "iconRight": false,
              "loadingProps": Object {
                "color": "white",
                "size": "small",
              },
              "onPress": [Function],
              "raised": false,
              "title": "バーコード読み取り",
              "titleStyle": Object {
                "color": "#fff",
                "fontWeight": "700",
                "textAlign": "center",
              },
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
